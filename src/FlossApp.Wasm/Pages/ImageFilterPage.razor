@page "/ImageFilter"
@using FlossApp.Application.Enums
@using FlossApp.Application.ViewModels.Images
@using FlossApp.Wasm.Components
@inject IImageFilterViewModel ViewModel

<style>
    div.color-sample-container {
        display: flex;
        -o-justify-content: center;
        -webkit-justify-content: center;
        justify-content: center;
        -ms-align-items: center;
        -o-align-items: center;
        -webkit-align-items: center;
        align-items: center;
    }

    div.color-sample {
        margin-left: 1em;
        height: 2em;
        width: 2em;
        -ms-border-radius: 50%;
        border-radius: 50%;
    }
</style>

@if (!string.IsNullOrWhiteSpace(ViewModel.ImageOutBase64))
{
    <MudPaper style="max-width: 100%" Class="m-1 p-2 pb-5">
        <img style="width: 100%; height: auto; image-rendering: pixelated;"
             src="data:image/png;base64,@(ViewModel.ImageOutBase64)" />
        <p style="text-align: center">
            @(ViewModel.ImageIn.Width)x@(ViewModel.ImageIn.Height)
            ->
            @(ViewModel.ImageOut.Width)x@(ViewModel.ImageOut.Height)

            (@(ViewModel.ImageOut.Width * ViewModel.ImageOut.Height) total)
        </p>
    </MudPaper>

    @if (ViewModel.TargetSchema is not ColorSchema.Rgb)
    {
        <MudExpansionPanels Class="my-2">
            <MudExpansionPanel Text="Palette">
                <MudSimpleTable>
                    <thead>
                        <tr>
                            <th>Sample</th>
                            <th>Number</th>
                            <th>Name</th>
                            <th>Count</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var color in ViewModel.Palette)
                        {
                            <tr>
                                <td><MudIcon Icon="@Icons.Material.Filled.Circle" Style="@($"color: #{color.Key.AsHex()};")" /></td>
                                <td>@color.Key.Number</td>
                                <td>@color.Key.Name</td>
                                <td>@color.Value</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudExpansionPanel>
        </MudExpansionPanels>
    }
}

<MudStack>
    <div class="row">
        <div class="col">
            <EnumPicker Label="Target schema" T="ColorSchema" @bind-Value="ViewModel.TargetSchema" />
        </div>
        <div class="col col-auto">
            <MudNumericField Label="Fidelity" @bind-Value="ViewModel.TargetDistinctColours"
                             T="int" Min="1" />
        </div>
    </div>

    <div class="row">
        <div class="col col-auto">
            <MudNumericField Label="Pixel ratio" @bind-Value="ViewModel.PixelRatio"
                             T="float" Min="@((float)0.01)" Max="1" Step="@((float)0.01)" />
        </div>

        <div class="col">
            <MudNumericField Label="New width" @bind-Value="ViewModel.TargetWidth"
                             T="int" Min="1" Max="ViewModel.ImageIn.Width" />
        </div>

        <div class="col">
            <MudNumericField Label="New Height" @bind-Value="ViewModel.TargetHeight"
                             T="int" Min="1" Max="ViewModel.ImageIn.Height" />
        </div>
    </div>

    <div class="row">

        <div class="col">
            <MudSlider @bind-Value="ViewModel.PixelRatio"
                       T="float" Min="@((float)0.01)" Max="1" Step="@((float)0.01)" />
        </div>
    </div>

    <div class="row">
        <MudExpansionPanels Class="w-100">
            <MudExpansionPanel Text="Advanced">
                <div class="row">
                    <div class="col">
                        <EnumPicker T="ImageSharpKnownResamplers" Label="Resampler" @bind-Value="ViewModel.ResamplerKind" />
                    </div>
                    <div class="col">
                        <NullableEnumPicker T="ImageSharpKnownDitherings" Label="Dither" @bind-Value="ViewModel.DitherKind" />
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <MudNumericField T="byte" Min="0" Max="255" @bind-Value="ViewModel.TransparencyThreshold" Label="Transparency Threshold" />
                    </div>
                    <div class="col col-auto">
                        <MudSlider T="byte" Min="0" Max="255" @bind-Value="ViewModel.TransparencyThreshold" />
                    </div>
                </div>
            </MudExpansionPanel>
        </MudExpansionPanels>
    </div>

    <div class="row">
        <div class="col" style="text-align: center;">
            <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" MaximumFileCount="1">
                <ActivatorContent>
                    <MudButton Variant="Variant.Filled"
                               StartIcon="@Icons.Material.Filled.FileOpen">
                        Choose File
                    </MudButton>
                </ActivatorContent>
            </MudFileUpload>
        </div>
        <div class="col" style="text-align: center;">
            <MudButton OnClick="ViewModel.ProcessImageAsync" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Refresh">
                Process
            </MudButton>
        </div>
        <div class="col" style="text-align: center;">
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save">
                <a href="data:image/png;base64,@(ViewModel.ImageOutBase64)" download="@(Guid.NewGuid()).png">
                    Save
                </a>
            </MudButton>
        </div>
    </div>
</MudStack>
